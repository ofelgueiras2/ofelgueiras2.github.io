
body {
  font-family: Arial, sans-serif;
  max-width: 800px;
  margin: 10px auto;
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);

  /* Gradient top-to-bottom */
  background: linear-gradient(
  180deg,
  #fff8e1 0%,
  #fff8e1 30%,   /* sobe a área uniforme para dar mais “respiro” */
  #ffe8a0 55%,   /* tom intermédio um pouco mais suave */
  #fff8e1 85%,
  #ffe57f 100%
);
}



/* Ajuste para telas menores */
@media screen and (max-width: 800px) {
  body {
      max-width: 98%; /* Reduz ainda mais a margem lateral */
      padding: 8px;
  }
}

h1 {
  text-align: center;
  color: #314D23;
  margin-top: 10px;
  margin-bottom: 10px;
}



button {
  width: 100%;
  padding: 2px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
}

button {
  background-color: #007bff;
  color: white;
  cursor: pointer;
}
button:hover {
  background-color: #0056b3;
}

/* botão e input genérico já tratados lá em cima, então aqui concentramos só nos form-controls */
input.form-control,
select.form-control {
/* O padding que tu quiseres (8px é um bom valor) */
padding: 0 8px;
/* assegura que seja este padding a valer, não o do user agent */
box-sizing: border-box;
}

table {
  width: 100%;
  /* passa de collapse para separate para permitir border-radius */
  border-collapse: separate;
  border-spacing: 0;
  margin-top: 20px;
  border-radius: 10px;
  overflow: hidden;
}

th, td {
  border: 1px solid #ddd;
  padding: 10px;
  text-align: center;
}
th {
  background-color: #007bff;
  color: white;
}
#listaTarifarios {
  margin-top: 20px;
}

.botao-excel, .botao-sheet {
  display: inline-block;
  padding: 12px 20px;
  margin: 10px;
  font-size: 16px;
  font-weight: bold;
  text-decoration: none;
  border-radius: 5px;
  transition: background-color 0.3s;
}

/* Estilo para o botão de download do Excel */
.botao-excel {
  background-color: #006dff;
  color: white;
}

.botao-excel:hover {
  background-color: #0056b3;
}

/* Estilo para o botão de abrir Google Sheets */
.botao-sheet {
  background-color: #28863e;
  color: white;
}

.botao-sheet:hover {
  background-color: #1e7e34;
}

.btn-limpar {
  position: absolute;
  bottom: 10px;
  right: 10px;
  width: 30px;
  height: 30px;
  border: 1px solid #bbb;
  border-radius: 4px;
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.3s, border-color 0.3s;
}

.btn-limpar:hover {
  background-color: #f0f0f0;
  border-color: #aaa;
}

.btn-limpar i {
  font-size: 20px;
  color: #333;
  transform: rotate(-10deg);
}

.conteudo-ts {
  display: none;
  padding: 10px;
  border: 1px solid #bbb;
  background-color: white;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
  border-top-right-radius: 4px;
}

.aba {
  padding: 10px;
  color: #aaa;
  cursor: pointer;
  border: 1px solid #bbb;
  border-bottom: none;
  background-color: #e0e0e0;
  font-weight: bold;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  transition: background-color 0.3s;
}

.aba:hover {
  background-color: #d0d0d0;
}


.conteudo-aba {
  display: none;
  padding: 10px;
  border: 1px solid #bbb;
  background-color: white;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
  border-top-right-radius: 4px;
}


.aba.ativa {
  background-color: white;
  color: black;
  border-bottom: 2px solid white;
}

.conteudo-aba.ativa {
  display: block;
  background-color: #f4f4f4; /* Igual ao fundo do <body> */
  border: 1px solid #bbb;
  padding: 10px;
}

#opcoesOutras {
  margin-top: 15px;
  font-size: 16px;
  color: #555;
}

.sort-container {
  position: absolute;
  right: 0.5px;           /* distância da borda direita da célula */
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column; /* empilha verticalmente */
  align-items: center;    /* centraliza horizontalmente dentro do container */
}

.sort-arrow0 {
  cursor: pointer;
  margin: 0px 0;     /* espaço vertical reduzido entre as setas */
  font-size: 12px;
  -webkit-text-stroke: 1px #ffffff; /* traço interno preto */
  text-rendering: optimizeLegibility;
}

.sort-arrow0.selected {
  color: #bbb;
  -webkit-text-stroke: 1px #ffffff; /* traço interno preto */
  text-rendering: optimizeLegibility;
}

:root {
  /* valor-padrão */
  --header-ft-primary: #000;
}

.sort-arrow {
  cursor: pointer;
  margin: 0px 0;     /* espaço vertical reduzido entre as setas */
  font-size: 12px;
  line-height: 1; 
  -webkit-text-stroke: 1px var(--header-ft-primary);
  text-rendering: optimizeLegibility;
}



.sort-arrow.selected {
  /* usa a custom property para o stroke */
  -webkit-text-stroke: 1px var(--header-ft-primary);
  /* você já tinha: */
  color: #bbb;
  line-height: 1; 
  text-rendering: optimizeLegibility;
}




/* 1. Cards leves */
.card {
  background: rgb(227, 146, 96);
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.05);
  padding: 16px;
  margin-bottom: 16px;
}

/* 2. Feedback de foco em inputs */
input:focus,
select:focus,
button:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.2);
  background-color: #f0f8ff;
}


.parent {
  display: grid;
  grid-template-columns: 1fr 1fr auto;
  grid-template-rows: 
    auto    /* div1: Mês + Dias */
    auto    /* div3: Botões */
    auto    /* div4: OMIE */
    auto    /* div5: Datas */
    auto    /* div6: Descontos Sociais */
    auto;   /* div2: Potência + consumo */
  grid-template-areas:
    "div1  div1       btnDias"
    "div3  div3       ."
    "div4  l4          ."
    "div5  div5       l5"
    "div6  div6       l6"
    "div2  div2       btnDefinicoes";
    grid-column-gap: 10px;
    grid-row-gap: 0px;
    background: #f3e29f;
    border-radius: 8px;
    box-shadow: 0 2px 6px rgba(0,0,0,0.05);
    padding: 10px;
    margin: 0 0 0 0;;
}

/* area assignments */
.div1            { grid-area: div1; }
.div3            { grid-area: div3; }         /* switch-buttons */
.div4            { grid-area: div4; }         /* painel OMIE */
.div5            { grid-area: div5; }         /* painel datas */
.div6            { grid-area: div6; }         /* Descontos Sociais */
.div2            { grid-area: div2; }
#btnDias        { grid-area: btnDias; }
#btnDefinicoes  { grid-area: btnDefinicoes; }

/* escondidos por padrão */
.div4.hidden,
.div5.hidden,
.div6.hidden {
  display: none;
}

/* opcional: layout interno de div4 */
.div4 {
  display: grid;
  grid-template-columns: 1fr;
  gap: 8px;
  align-self: start;
}

.div4:not(.hidden) {
  margin-top: 10px;
}


.div5 {
  display: grid;
  grid-template-columns: 1fr 1fr;
  column-gap: 10px;
  margin-top: 10px;
}

.div5.hidden {
  display: none !important;
}

.div6 {
  display: grid;
  grid-template-columns: 1fr;
  column-gap: 10px;
  align-items: end; /* garante alinhamento inferior */
  margin-top: 10px;
  overflow: hidden; /* ⬅️ impede o colapso da margem interna */
}

.div6.hidden {
  display: none !important;
}

/* Posicionamento dos novos botões */
#btnClearOmie    { grid-area: l4; justify-self: start; align-self: end; }
#btnClearDates   { grid-area: l5; justify-self: start; align-self: end; }
#btnClearTs      { grid-area: l6; justify-self: start; align-self: end; }

/* Herdar o estilo do .btn-limpar-inline para os novos */
#btnClearOmie,
#btnClearDates,
#btnClearTs {
width: 30px; height: 30px;
/* Garante que border+paddings fiquem dentro dos 30px totais */
/*  box-sizing: border-box; */
border: 1px solid #bbb; border-radius: 4px;
background-color: #fff;
display: flex; justify-content: center; align-items: center;
cursor: pointer; transition: background-color .3s, border-color .3s;
}
#btnClearOmie:hover,
#btnClearDates:hover,
#btnClearTs:hover {
background-color: #f0f0f0; border-color: #aaa;
}
#btnClearOmie i,
#btnClearDates i,
#btnClearTs i {
font-size: 20px; color: #333; transform: rotate(-10deg);
}



/* área do botão do Dias */
#btnDias {
  grid-area: btnDias;
  justify-self: center;  /* centra horizontalmente na coluna 3 */
  align-self: end;       /* alinha ao fundo da área (base da linha 1) */
}


/* área do botão de Definições */
#btnDefinicoes {
  grid-area: btnDefinicoes;
  justify-self: center;  /* centra horizontalmente na coluna 3 */
  align-self: end;    /* centra verticalmente na linha 3 */
}



.date-grid {
  display: grid;
  grid-template-columns: repeat(2, minmax(140px, 1fr));
  column-gap: 14px;
  align-items: start;
  width: 100%;
}

/* quando div3 aparece, mostra os dois botões lado a lado */
.switch-buttons {
  display: flex;
  gap: 8px;
  align-items: center;
  margin-bottom: 0px;
  position: relative;  /* referência correta para o botão absoluto */
}


.date-cell {
  display: grid;
  grid-template-rows: auto 1fr;  /* label em cima, input em baixo */
}

.date-cell label {
  margin-bottom: 0px;   /* um bocadinho de espaço até ao input */
}

.date-cell input {
  width: 100%;          /* preenche toda a célula */
  box-sizing: border-box;
}

.month-days-container {

    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column: 1 / 3;
    /* duas colunas que se ajustam ao conteúdo */
    column-gap: 10px;
    /* mesmo gap que tinhas antes */
    justify-content: start;
    /* centra horizontalmente o conjunto */
    align-items: start;
    /* centra verticalmente os itens */
}

/* 1) Faz da .div1 um grid interno para Mês/Dias/Intervalo */
.div1 {
  display: grid;
  grid-template-columns: auto auto;  /* 2 colunas que se ajustam ao conteúdo */
  grid-template-rows: auto auto;     /* 2 linhas: 1ª linha Mês/Dias, 2ª linha Intervalo */
  column-gap: 10px;                  /* espaçamento horizontal */
  row-gap: 0px;                     /* espaçamento vertical */
  margin-bottom: 0px;
  justify-items: stretch;              /* cada célula alinhada à esquerda */
  align-items: start;                /* cada célula alinhada ao topo */
}

.div2 {
  display: grid;
  /* Duas colunas que dividem igualmente todo o espaço disponível */
  grid-template-columns: 1fr 1fr;
  /* Espaçamento horizontal entre elas */
  column-gap: 10px;
  margin-top: 10px;
  /* Espaçamento vertical entre linhas, caso venha a ter mais de uma */
  row-gap: 0px;
}









/* Posiciona cada bloco no seu sítio */
.monthBlock {
  grid-column: 1;  /* 1ª coluna */
  grid-row:    1;  /* 1ª linha */
}

.daysBlock {
  grid-column: 2;  /* 2ª coluna */
  grid-row:    1;  /* 1ª linha */
}

.rangeBlock {
  margin-top: 10px;
  grid-column: 1 / 3; /* do início da 1ª à 2ª coluna */
  grid-row:    2;     /* 2ª linha */
}

/* Mantém sempre o grid para o intervalo de datas */
#dateRangeFields {
  display: grid;
  grid-template-columns: repeat(2, minmax(140px, 1fr));
  gap: 10px;
  width: 100%;
}

/* Classe de ocultação genérica */
.hidden {
  display: none !important;
}

.form-group {
  display: flex;
  flex-direction: column;
  align-self: end;
  margin-top: 0;
}
.form-group label {
  display: block;            /* agora ocupa toda a largura do container */
  width: 120%;               /* forçamos a 100% da célula do grid */
  box-sizing: border-box;    /* faz o padding e a borda entrarem dentro desses 100% */
  margin-bottom: 4px;
  padding: 0 6px;            /* igual ao form-control */
  
  /* borda transparente para simular a borda do select */
  font-weight: bold;
  font-size: 15px;
}
.form-control {
  width: 100%;
  height: 30px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 5px;
  padding: 0 10px;
  box-sizing: border-box;
}
/* substitua 6px pelo valor que viu no select */
input.form-control {
  padding-left: 13px;    /* desloca o texto interno do input */
  /* mantém o padding-right que já tem (e height, box-sizing, etc.) */
}

/* Garante que date inputs têm o mesmo padding e alinhamento que os outros */
input.form-control[type="date"] {
padding: 0 12px;
text-align: left;
box-sizing: border-box;
font-family: Arial, sans-serif;
font-size: 16px;
line-height: 1.4;
-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;
}

/* .div3 e stack vertical */
.div3 {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  align-self: start;
  margin-top: 10px;
  margin-bottom: 0px;
}
.button-stack {
  display: flex;
  flex-direction: column;
  gap: 10px;              /* espaço entre os botões */
}

/* estilo único para ambos os botões */
.btn-icon {
  width: 50px;
  height: 30px;
  border: 1px solid #bbb;    /* mesma cor do antigo #btnDefinicoes */
  border-radius: 4px;         /* mesma radius do antigo #btnDefinicoes */
  background-color: #fff;     /* branco uniforme para os dois */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.2s, border-color 0.2s;
  color:#222
}
.btn-icon:hover {
  background-color: #f0f0f0;
  border-color: #aaa;
}

.btn-icon i {
  font-size: 18px;
  color: #333;
}

/* aplica ao <svg> container */
.btn-icon svg {
  width: 100%;
  height: 100%;
  display: block;
}



/* cria duas colunas iguais, com gap igual aos outros grids */
.form-row-duas-colunas {
  display: grid;
  grid-template-columns: repeat(2, minmax(140px, 1fr));
  column-gap: 10px;   /* ou o gap que utilizas nos outros lugares */
  margin-bottom: 0px;/* espaço abaixo do row, se quiseres */
}

/* já tens .form-group e .form-control definidas,
   então não precisas de mais nada aqui */

  
/* layout de div3 (só o toggle principal) */   
  
#btnShowOmie img {
  max-width: 100%;
  max-height: 100%;
  width: 100px;   /* força largura fixa */
  height: 30px;  /* força altura fixa */
  object-fit: contain;
}
       
.btn-limpar-inline {
  width: 30px;
  height: 30px;
  border: 1px solid #bbb;
  border-radius: 4px;
  background-color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  color: #fff;
  transition: background-color 0.3s, border-color 0.3s;
  /* importante: NÃO TEM position:absolute */
}

.btn-limpar-inline:hover {
  background-color: #f0f0f0;
  border-color: #aaa;
}

.btn-limpar-inline i {
  font-size: 20px;
  color: #333;
  transform: rotate(-10deg);
}

.btn-limpar-inline svg {
  width: 100%;
  height: 100%;
}


@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
.pulse {
  animation: pulse 0.6s ease;
}

@keyframes pulsar {
  0%   { transform: scale(1); }
  50%  { transform: scale(1.2); }
  100% { transform: scale(1); }
}
.pulsar {
  animation: pulsar 0.6s ease-out;
}



/* rótulo igual ao anterior */
.form-label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: #333;
}



/* espaçamento entre linhas */
.form-check {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
}

.form-check.mt-2 {
  margin-top: 0rem;
}

/* cor dos radios/checkbox para combinar com o tema */
.form-check-input {
  margin-right: 0.5rem;
}

.form-check-label {
  font-size: 1rem;
  color: #222;
  line-height: 1.2;
}

/* força todos os checkboxes e rádios a usar o mesmo cinzento */
input[type="checkbox"],
input[type="radio"] {
accent-color: #6c757d;  /* ou outro cinzento à tua escolha */
}

.ts-options .form-check-label {
  font-weight: normal;
}

/* Desativa o bold apenas nas labels de Descontos Sociais */
#conteudoTs label {
  font-weight: normal !important;
}

.grafico-wrapper {
  position: relative;
  width: 100%;
  /* reserva sempre o espaço 16:9 */
  padding-top: 56.25%;    /* = 9/16 x 100% */
  overflow: hidden;
  border-radius: 10px;
  background: white;      /* opcional, esconde qualquer “gap” residual */
}

.grafico-wrapper iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}


/* inicialmente tudo invisível */
#postTableContent {
  visibility: hidden;
}

/* cada bloco começa transparente e deslocado levemente */
.post-table-content .reveal {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity .4s ease, transform .4s ease;
}

/* quando “ativo” cada bloco passa a visível */
.post-table-content .reveal.visible {
  opacity: 1;
  transform: translateY(0);
}

/* no seu styles.css */
.titulo-omie {
  background-color: #f3e29f;
  padding: 12px;
  font-family: sans-serif;
  text-align: center;
  border-radius: 12px;
  margin-bottom: 0;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}
.titulo-omie > div {
  margin-bottom: 4px;
}


html {
  background-color: black;
}

.tarifario-nome {
  display: inline-block;
  padding: 4px 8px;
  border-radius: 8px;
  border: 2px solid transparent;
  background-color: white;
  font-weight: bold;
}

/* Estilo para tarifários indexados */
.tarifario-indexado {
  border-color: #0070C0; /* azul vivo */
  background-color: #eef6ff;
}

/* Estilo para tarifários normais */
.tarifario-fixo {
  border-color: #00853c; /* verde escuro */
  background-color: #f1fdf4;
}

.has-tooltip {
  position: relative;
  cursor: help;
}

/* indicador sempre visível, muito discreto */
.has-tooltip::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 6px;
  height: 6px;
  background: rgba(255, 255, 255, 0.15);
  border-top-right-radius: 100%;
  pointer-events: none;
  transition: background 0.2s ease, width 0.2s ease, height 0.2s ease;
}

/* no hover ou active, torna-se mais óbvio */
.has-tooltip:hover::after,
.has-tooltip.has-tooltip-active::after {
  background: rgba(255, 255, 255, 0.6);
  width: 10px;
  height: 10px;
}

.mais-indicator {
  position: relative;
  overflow: hidden;  /* respeita o border-radius do <td> */
}
.mais-indicator::before {
  content: "";
  position: absolute;
  top: 0;                /* antes era bottom: 0; */
  right: 0;
  width: 8px;
  height: 8px;
  background: rgba(255, 0, 0, 0.6);
  border-bottom-left-radius: 100%;  /* antes era border-top-left-radius */
  pointer-events: none;
  z-index: 1;
}

/* estilos gerais do tooltip */
.tooltip-matrix {
  background-color: #fafafa;
  color: #000;
  border-collapse: collapse;
  font-size: 0.9em;
  line-height: 1.3;
  padding: 4px;
  table-layout: auto;
  width: auto; /* deixa a tabela crescer conforme o conteúdo */
  border-radius:8px;
  border: none !important;
}

/* 2) Cabeçalhos sempre centrados */
.tooltip-matrix th {
  text-align: center;
  padding: 4px 8px;
  border-left: none !important;
  border-right: none !important;
  border-top: none !important;
}

.tooltip-matrix td {
  padding: 6px 10px;
  text-align: left;
  border-left: none !important;
  border-right: none !important;
}

/* 3) Primeira coluna sem wrap (força uma só linha) */
.tooltip-matrix th:first-child,
.tooltip-matrix td:first-child {
  white-space: nowrap;
}

.tooltip-invoice table.tooltip-matrix td:nth-child(2) {
  white-space: nowrap;
}


/* cabeçalho delimitado por linhas */
.tooltip-matrix thead th {
  text-align: center;
  font-weight: bold;
  border-bottom: 1px solid #ccc;
  border-top:    1px solid #ccc;
  background-color: none;
  /*background-color: #00853c !important;  /* o teu novo tom de azul */
  /*color: #fff !important;                /* garante contraste */
}

/* total — última linha em negrito e delimitada */
.tooltip-matrix tfoot td {
  font-weight: bold;
  border-top: 1px solid #ccc;
  border-bottom: none !important;
}

/* alinha à direita a 2ª coluna (preços) no corpo e no rodapé */
.tooltip-matrix tbody td:nth-child(2),
.tooltip-matrix tfoot td:nth-child(2) {
  text-align: right;
}

/* --- no fim do styles.css --- */

/* No fim do seu styles.css, depois de tudo */

/* Para todos os tooltips */
.tippy-box {
  max-width: none !important;
}

/* 1) Balão escuro fica como está (tão-somente shadow & radius) */
.tippy-box[data-theme~='light-border'] {
  /* mantém o background escuro */
  background-color: #2e2e2e !important;
  /* garante raio de canto e sombra originais */
  padding: 4px !important;
  border-radius: 8px !important;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15) !important;
}

/* 2) Faz o wrapper interno transparente */
.tippy-box[data-theme~='light-border'] .tooltip-invoice {
  background: transparent !important;
  border-radius: inherit;
  overflow: visible;
  margin: 0; padding: 0;
}

/* 3) Dá o fundo claro só à tabela interna */
.tippy-box[data-theme~='light-border'] .tooltip-matrix {
  background: #fafafa;            /* fundo da tabela */
  border-radius: 6px;             /* cantos arredondados */
  overflow: hidden;               /* para a tabela não vazar */
  margin: 0;                      /* encaixe total */
  width: 100%;
}

/* 4) Ajusta o padding da tabela para não bater no balão */
.tippy-box[data-theme~='light-border'] .tooltip-matrix th,
.tippy-box[data-theme~='light-border'] .tooltip-matrix td {
  padding: 3px 4px;
  font-size: 0.82rem;            /* mantém o tamanho compacto */
}




/* 1) Wrapper “apertado” mas com sombra suave */
.tippy-box[data-theme~='light-border'] {
  padding: 4px !important;    /* reduz ao mínimo o espaçamento interno */
  margin: 0 !important;       /* garante que não há gap em redor */
  box-shadow: 0 4px 12px rgba(0,0,0,0.15) !important; /* mantém a sombra */
}

/* 2) Tabela interna sem margens */
.tippy-box[data-theme~='light-border'] .tooltip-matrix {
  margin: 0 !important;
}


/* 2) Aplica a sombra é na tua tabela interna */
.tippy-box[data-theme~='light-border'] .tooltip-matrix {
  background-color: #fafafa;               /* ou o teu fundo */
  box-shadow: 0 40px 120px rgba(0,0,0,0.15); /* mantém uma sombra suave */
  border-radius: 8px;
  margin: 0;                               /* garante que não acrescente gap extra */
}

/* 3) (Opcional) Ajusta a posição da seta se ficar demasiado longe */
.tippy-box[data-theme~='light-border'][data-placement^='top'] .tippy-arrow {
  margin-bottom: 0px; /* aproxima a seta do conteúdo */
}



.tooltip-hierarchical summary {
  display: flex;
  justify-content: space-between;
  align-items: center;
  list-style: none;
  cursor: pointer;
  padding: 6px 0;
  font-weight: bold;
}
.tooltip-hierarchical summary::-webkit-details-marker {
  display: none;
}
.tooltip-hierarchical summary::before {
  content: '+';
  width: 1em; text-align: center; margin-right: 4px;
}
.tooltip-hierarchical details[open] summary::before {
  content: '–';
}
.tooltip-hierarchical .label {
  flex: 1;           /* ocupa todo o espaço disponível */
}
.tooltip-hierarchical .value {
  flex: 0 0 auto;    /* ocupa apenas o necessário */
  text-align: right; /* alinha à direita */
  margin-left: 8px;
}
/* mantém os estilos já existentes para .tooltip-matrix, .tooltip-total, etc. */

/* container geral */
.tooltip-invoice {
  border-collapse: collapse;
  font-size: 0.82em;
  background: #fff;
  color: #000;
  width: auto;
}



/* cabeçalho */
.tooltip-invoice th {
  background-color: var(--background-secondary); /* usa a tua variável */
  color: #fff;
  padding: 4px 8px;
  text-align: center;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
}

/* células */
.tooltip-invoice td {
  padding: 4px 8px;
}

/* primeira coluna sempre à esquerda */
.tooltip-invoice td:first-child {
  text-align: left;
  white-space: nowrap;
}

/* todas as outras colunas à direita */
.tooltip-invoice td:nth-child(n+2) {
  text-align: right;
}

/* linha de grupo (Eletricidade, Taxas…) */
.tooltip-invoice .group-header td {
  font-weight: bold;
  border-top: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
  background: #f4f4f4;
}

/* linhas filho com indentação leve */
.tooltip-invoice .child-row td:first-child {
  padding-left: 1em;
}

/* acrescenta uma leve sombra ao balão */
.tippy-box {
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
}


/* tira as linhas exteriores das tabelas internas */
.tooltip-matrix {
  border-collapse: collapse;
  width: 100%;
}
.tooltip-matrix th,
.tooltip-matrix td {
  border: none;
  padding: 4px 8px;
}
/* mantém apenas as separações internas */
.tooltip-matrix thead th {
  border-bottom: 1px solid #ccc;
  text-align: center;
}
.tooltip-matrix tfoot td {
  border-top: 1px solid #ccc;
}
/* espaços antes/depois do details para não ficar demasiado “colado” */
.tooltip-invoice details {
  margin: 4px 0;
}
.tooltip-invoice summary {
  cursor: pointer;
  font-weight: bold;
  padding: 4px 0;
  list-style: none; /* remove o bullet padrão */
}
/* substitui o bullet do summary por + / − */
.tooltip-invoice summary::-webkit-details-marker {
  display: none;
}
.tooltip-invoice summary::before {
  content: '+';
  display: inline-block;
  width: 1em;
}
.tooltip-invoice details[open] summary::before {
  content: '−';
}

.tooltip-invoice table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.82rem;
}
.tooltip-invoice th, .tooltip-invoice td {
  border: 1px solid #ccc;
  padding: 4px 6px;
  text-align: right;
}
.tooltip-invoice td:first-child {
  text-align: left;
}
.tooltip-invoice tfoot td {
  font-weight: bold;
  background: #f9f9f9;
}
.tooltip-grand-total {
  margin-top: 6px;
  text-align: right;
  font-weight: bold;
}

#btnToggleCorners {
  position: absolute;
  bottom: 5px;
  left:   5px;
  width:  30px;
  height: 30px;
  padding: 0;
  background: none;
  border: none;
  cursor: pointer;

  display: flex;            /* 1. flex container */
  align-items: center;      /* 2. centra verticalmente */
  justify-content: center;  /* 3. centra horizontalmente */

  color: white;             /* a cor do quadrado/círculo */
}

#shapeToggle {
  font-size: 20px;   /* ajuste até que o símbolo tenha o tamanho desejado */
  line-height: 1;    /* garante que ocupa exatamente 1em de altura */
  user-select: none; /* evita seleção acidental */
  font-weight: bold;
}

/* Estado “selected” (círculo) */
#shapeToggle.circle {
  line-height: 1;
  /* troca o ■ pelo ● via JS */
  font-weight: bold;
}

/* valor-padrão: células arredondadas */
.interno {
  border-radius: 10px !important;
}

.internop {
  border-radius: 6px !important;
}

/* cabeçalhos “fixos” que precisam de 10px num canto externo */
.fixed-trr { border-top-right-radius: 10px !important; }
.fixed-tlr { border-top-left-radius: 10px !important; }

/* quando body receber .no-rounded, zera TUDO */
/* o !important garante que anula o inline antigo */
body.no-rounded .interno,
body.no-rounded .internop {
  border-radius: 0 !important;
}
body.no-rounded .fixed-trr {
  border-top-right-radius: 10px !important;
}
body.no-rounded .fixed-tlr {
  border-top-left-radius: 10px !important;
}

.omie-info-icon {
  display: inline-block;     /* transforma o span em “caixa” que podemos alinhar */
  width: 1em;                /* 1em = mesmo tamanho do texto */
  height: 1em;               /* 1em = mesmo tamanho do texto */
  vertical-align: middle;    /* alinha o meio do span (e do SVG interno) com o meio da linha de texto */
  /* color: white !important;
  font-size: 1em;
  font-weight: bold;
  line-height: 1;            /* pode continuar como antes, sem afetar o texto pai */
  cursor: help;
}

.omie-info-icon svg {
  display: block;            /* elimina espaçamento interno extra */
  width: 100%;
  height: 100%;
  /* Empurra o desenho uns décimos de em para cima: */
  transform: translateY(-0.1em);
}

.omie-info-icon:focus,
.omie-info-icon:active {
  outline: none;
  box-shadow: none;
}

/* Exemplo de tema custom para tippy */
.tippy-box.custom-info-theme {
  background-color: #f9f9f9;
  color: #333;
  border: 1px solid #ccc;
  font-size: 0.9em;
  max-width: 220px;
  padding: 6px 8px;
  border-radius: 4px;
}
.tippy-box.custom-info-theme .tippy-arrow:before {
  border-top-color: #ccc;
}




/* ─────────────────────────────────────────────────────
   1) Remover spinner nativo do Chrome/Safari (WebKit)
   ───────────────────────────────────────────────────── */
   .spinner-wrapper input[type="number"]::-webkit-inner-spin-button,
   .spinner-wrapper input[type="number"]::-webkit-outer-spin-button {
     -webkit-appearance: none;
     margin: 0;
   }
   
   /* ─────────────────────────────────────────────────────
      2) Remover spinner nativo do Firefox
      ───────────────────────────────────────────────────── */
   /* Faz o input-number “se comportar” como um textfield, sem setas */
   .spinner-wrapper input[type="number"] {
    /* 1) Versão “padrão” (ouça o linter) */
    appearance: textfield;
  
    /* 2) Prefixo Mozilla para Firefox */
    -moz-appearance: textfield;
  
    /* 3) Prefixo WebKit (Chrome/Safari) para eliminar setas nativas */
    -webkit-appearance: none;
  }
  
   
   /* (Opcionalmente, caso queira garantir que nenhuma pseudo-elemento 
      de spinner apareça no Firefox)
   */
   .spinner-wrapper input[type="number"]::-moz-number-spin-box {
     display: none;
   }
   


   
   /* ===========================================================
      2) Container pai (.spinner-wrapper) – position: relative
      =========================================================== */
   .spinner-wrapper {
     position: relative;
     width: 100%;
   }
   
   /* ===========================================================
      3) O <input> deve reservar espaço à direita para o spinner
      =========================================================== */
   .spinner-wrapper input[type="number"] {
     width: 100%;
     padding-right: 24px; /* espaço para o spinner */
     box-sizing: border-box;
   }
   
   /* ===========================================================
      4) Esconder o próprio spinner (<div class="spinner">) por padrão
      =========================================================== */
   .spinner-wrapper .spinner {
     position: absolute;
     right: 8px;            /* distância da borda direita */
     top: 50%;
     transform: translateY(-50%);
   
     /* Dimensões do spinner */
     height: 22px;
     width: 14px;
   
     background-color: #FFF; /* fundo branco (igual ao input) */
     border: 0;              /* sem borda visível */
     border-radius: 4px;     /* cantos arredondados */
     visibility: hidden;
     opacity: 0;
     pointer-events: none;   /* não capturar clique quando invisível */
   
     /* Transição suave para aparecer/desaparecer */
     transition: opacity 0.15s ease, visibility 0.15s ease;
   }
   
   /* ===========================================================
      5) Exibir o spinner quando o wrapper estiver em hover
      =========================================================== */
   .spinner-wrapper:hover .spinner {
     visibility: visible;
     opacity: 1;
     pointer-events: auto;
   }
   
   /* ===========================================================
      6) Exibir o spinner quando o <input> dentro do wrapper estiver em foco
      (suporta teclado: ao usar Tab, por exemplo)
      =========================================================== */
   .spinner-wrapper:focus-within .spinner {
     visibility: visible;
     opacity: 1;
     pointer-events: auto;
   }
   
   /* ===========================================================
      7) Cada botão interno (.spinner-btn):
        – ocupa metade da altura do spinner (50%)
        – centraliza o SVG (seta) com display:flex
        – reseta completamente o estilo nativo de <button>
        – adiciona transição para hover/active
      =========================================================== */
   .spinner-btn {
     appearance: none;
     -webkit-appearance: none;
     -moz-appearance: none;
   
     background-color: transparent !important;
     border: none !important;
     padding: 0;
     margin: 0;
     cursor: pointer;
   
     width: 100%;
     height: 50%;
     display: flex;
     align-items: center;
     justify-content: center;
     transform: scale(0.9);
     
     /* Transição de transform (encolher ao clicar) */
     transition: transform 0.1s ease;
   }
   
   /* Remove qualquer borda interna de foco do Firefox */
   .spinner-btn::-moz-focus-inner {
     border: 0;
   }
   
   /* Quando o botão ganha foco, não mostrar outline azul nem sombra */
   .spinner-btn:focus {
     outline: none !important;
     box-shadow: none !important;
   }
   
   /* No estado “ativo” (pressionado), apenas encolher */
   .spinner-btn:active {
     background-color: transparent !important;
     box-shadow: none !important;
     transform: scale(0.8);
   }
   
   /* ===========================================================
      8) O SVG dentro de cada <button> continua usando a classe “spinner-arrow-svg”:
        – define largura/altura (12×8)
        – usa currentColor para cor
        – sem pointer-events para o clique ir ao botão, não ao SVG
        – transição suave de cor
      =========================================================== */
   .spinner-arrow-svg {
     width: 12px;
     height: 8px;
     color: #8B8B8B;           /* cor padrão: cinza claro */
     user-select: none;
     pointer-events: none;  /* clique vai para .spinner-btn, não para o SVG */
     transition: color 0.1s ease;
   }
   
   /* ===========================================================
      9) Ao passar o cursor sobre o botão (.spinner-btn), seta vira preta
      =========================================================== */
   .spinner-btn:hover .spinner-arrow-svg {
     color: #636363;
   }
   
   /* (Opcional) Durante o estado “:active”, manter preta */
   .spinner-btn:active .spinner-arrow-svg {
     color: #636363;
   }
   
   
