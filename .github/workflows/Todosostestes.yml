name: Teste Selenium (com placeholders para Chrome/Edge)

on:
  workflow_dispatch:

jobs:
  test-firefox:
    runs-on: ubuntu-latest
    steps:
      # Opção 1: Se o repositório contiver script(s) R, é comum fazer checkout
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remover Firefox Snap e pacotes antigos
        run: |
          sudo snap remove firefox || echo "Firefox snap não estava instalado."
          sudo apt-get purge -y firefox*

      - name: Adicionar PPA do MozillaTeam e instalar Firefox “.deb”
        run: |
          # Adiciona o PPA do Firefox
          sudo add-apt-repository -y ppa:mozillateam/ppa
          # Cria arquivo de preferências para garantir prioridade ao PPA
          echo 'Package: firefox*
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001' | sudo tee /etc/apt/preferences.d/mozillateam-firefox > /dev/null

          sudo apt-get update
          sudo apt-get install -y --allow-downgrades firefox
          firefox --version

      - name: Criar placeholders “fake” para ChromeDriver e EdgeDriver
        run: |
          sudo sh -c 'echo "#!/usr/bin/env bash\necho Fake chromedriver 0.0.0\nexit 0" > /usr/local/bin/chromedriver'
          sudo chmod +x /usr/local/bin/chromedriver
          sudo sh -c 'echo "#!/usr/bin/env bash\necho Fake edgedriver 0.0.0\nexit 0" > /usr/local/bin/edgedriver'
          sudo chmod +x /usr/local/bin/edgedriver
          echo "Verificando placeholders..."
          which chromedriver || echo "chromedriver não encontrado"
          which edgedriver || echo "edgedriver não encontrado"
          /usr/local/bin/chromedriver --version || true
          /usr/local/bin/edgedriver --version || true

      - name: Instalar dependências extra (Xvfb, Java, etc.)
        run: |
          sudo apt-get update
          sudo apt-get install -y dbus-x11 xvfb openjdk-17-jre libnss3 wget unzip libcurl4-openssl-dev
          java -version

      - name: Instalar R (via r-lib/actions/setup-r)
        uses: r-lib/actions/setup-r@v2

      - name: Instalar pacote RSelenium no R
        run: |
          Rscript -e 'install.packages("RSelenium", repos="https://cran.rstudio.com")'

      - name: Iniciar Xvfb
        run: |
          nohup Xvfb :99 -screen 0 1920x1080x24 &
          sleep 3
          export DISPLAY=:99
          echo "Xvfb iniciado."

      - name: Baixar Selenium Server
        run: |
          wget -q "https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.29.0/selenium-server-4.29.0.jar" -O selenium-server.jar

      - name: Subir Selenium Server (Standalone)
        run: |
          export DISPLAY=:99
          # Garante geckodriver no PATH
          export PATH="/usr/local/bin:$PATH"
          nohup java \
            -Dwebdriver.gecko.driver=/usr/local/bin/geckodriver \
            -jar selenium-server.jar standalone \
            --port 4444 --host 127.0.0.1 \
            --selenium-manager false \
            > selenium.log 2>&1 &
          sleep 10
          echo "Selenium subiu"
          # Verifica se está rodando
          ps aux | grep "[s]elenium" || (echo "❌ Selenium não está rodando!" && cat selenium.log && exit 1)
          netstat -tuln | grep 4444 || (echo "❌ Porta 4444 não está escutando!" && cat selenium.log && exit 1)

      - name: Teste R com RSelenium
        run: |
          export DISPLAY=:99
          Rscript -e '
            library(RSelenium)
            message("Conectando ao Selenium + Firefox...")
            remDr <- remoteDriver(
              remoteServerAddr="127.0.0.1",
              port=4444,
              browserName="firefox"
            )
            remDr$open()
            message("Navegando em https://www.google.com ...")
            remDr$navigate("https://www.google.com")
            Sys.sleep(3)
            # Tenta capturar a URL
            current <- remDr$getCurrentUrl()
            message("URL atual: ", current)
            # Coletar parte do pageSource
            ps <- remDr$getPageSource()[[1]]
            message("Snippet do pageSource: ", substring(ps, 1, 200))
            remDr$close()
          '

      - name: Mostrar logs do Selenium
        run: cat selenium.log


