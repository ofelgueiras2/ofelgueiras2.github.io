name: Teste RSelenium Firefox

on:
  workflow_dispatch:

jobs:
  rselenium-firefox:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout do repositório
      - uses: actions/checkout@v3

      # 2) Instalar primeiro as dependências do sistema
      #    (incluindo libcurl4-openssl-dev, que evita erro de "curl/curl.h not found")
      - name: Install system dependencies
        run: |
          sudo apt-get update
          # Necessário para compilar 'curl' no R, e outras libs comuns
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libgit2-dev \
                                  dbus-x11 xvfb openjdk-17-jre wget tar net-tools
          # Remover o firefox em snap, se existir
          sudo snap remove firefox || true
          # Purge de pacotes antigos de Firefox
          sudo apt-get purge -y firefox* || true
          sudo apt-get autoremove -y

      # 3) Adicionar repositório (PPA) oficial do Firefox e impedir snap
      - name: Add MozillaTeam PPA and block Snap
        run: |
          sudo add-apt-repository -y ppa:mozillateam/ppa
          echo '
          Package: *
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001

          Package: firefox
          Pin: version 1:1snap*
          Pin-Priority: -1
          ' | sudo tee /etc/apt/preferences.d/firefox-nosnap
          sudo apt-get update

      # 4) Instalar Firefox .deb do PPA
      - name: Install Firefox .deb
        run: |
          sudo apt-get install -y firefox
          firefox --version

      # 5) Instalar Geckodriver
      - name: Install Geckodriver
        run: |
          GECKO_VER="0.36.0"
          wget -q "https://github.com/mozilla/geckodriver/releases/download/v${GECKO_VER}/geckodriver-v${GECKO_VER}-linux64.tar.gz"
          tar -xzf "geckodriver-v${GECKO_VER}-linux64.tar.gz"
          sudo mv geckodriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/geckodriver
          geckodriver --version

      # 6) Agora sim, configurar R e renv
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.3'  # ou a versão de sua preferência

      - name: Setup renv
        uses: r-lib/actions/setup-renv@v2

      # 7) Se você tem um renv.lock, restaura pacotes do R
      - name: Restore R packages via renv
        run: Rscript -e 'renv::restore(prompt = FALSE)'

      # 8) Iniciar Xvfb
      - name: Start Xvfb
        run: |
          Xvfb :99 -ac -screen 0 1920x1080x24 &
          sleep 3
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Iniciar Selenium Server 4.29.0
        run: |
          wget -q -O selenium-server.jar https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.29.0/selenium-server-4.29.0.jar
          java -jar selenium-server.jar standalone > selenium.log 2>&1 &
          sleep 5

      - name: Executar teste RSelenium
        run: |
          Rscript -e "library(RSelenium); \
                      remDr <- remoteDriver(remoteServerAddr = 'localhost', browserName = 'firefox', port = 4444L); \
                      remDr$open(); \
                      remDr$navigate('https://www.google.com'); \
                      url <- remDr$getCurrentUrl()[[1]]; \
                      title <- remDr$getTitle()[[1]]; \
                      cat('URL:', url, '\n'); \
                      cat('Título:', title, '\n'); \
                      if (is.na(url) || url == '') { \
                        stop('URL está vazia ou NA - falhando o job') \
                      }; \
                      remDr$close()"

      - name: Exibir log do Selenium
        if: always()
        run: cat selenium.log
