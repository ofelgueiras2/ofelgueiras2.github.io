name: RSelenium Firefox Test

on:
  workflow_dispatch:  # Permite execução manual

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      - name: Configurar R 4.4.3 e renv
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.3'
      - uses: r-lib/actions/setup-renv@v2

      - name: Instalar Firefox (via PPA) e dependências
        run: |
          sudo add-apt-repository -y ppa:mozillateam/ppa
          echo "Package: *
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001

          Package: firefox
          Pin: version 1:1snap*
          Pin-Priority: -1" | sudo tee /etc/apt/preferences.d/mozilla-firefox
          if sudo snap list | grep -q firefox; then sudo snap remove -y firefox; fi
          sudo apt-get update
          sudo apt-get install -y firefox xvfb openjdk-11-jre wget tar

      - name: Instalar Geckodriver 0.36.0
        run: |
          wget -q -O geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.36.0/geckodriver-v0.36.0-linux64.tar.gz
          tar -xzf geckodriver.tar.gz
          sudo mv geckodriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/geckodriver

      - name: Iniciar Xvfb (display virtual)
        run: |
          Xvfb :99 -screen 0 1280x1024x24 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Iniciar Selenium Server 4.29.0
        run: |
          wget -q -O selenium-server.jar https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.29.0/selenium-server-4.29.0.jar
          java -jar selenium-server.jar standalone > selenium.log 2>&1 &
          sleep 5

      - name: Executar teste RSelenium
        run: |
          Rscript -e "library(RSelenium); \
                      remDr <- remoteDriver(remoteServerAddr = 'localhost', browserName = 'firefox', port = 4444L); \
                      remDr$open(); \
                      remDr$navigate('https://www.google.com'); \
                      url <- remDr$getCurrentUrl()[[1]]; \
                      title <- remDr$getTitle()[[1]]; \
                      cat('URL:', url, '\n'); \
                      cat('Título:', title, '\n'); \
                      if (is.na(url) || url == '') { \
                        stop('URL está vazia ou NA - falhando o job') \
                      }; \
                      remDr$close()"

      - name: Exibir log do Selenium
        if: always()
        run: cat selenium.log

