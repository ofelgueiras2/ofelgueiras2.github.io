name: Run R Script and Commit CSV Teste

on:
  schedule:
    - cron: '0-59/10 12 * * *'  # De 13:00 até 13:59 (de 10 em 10 minutos)
    - cron: '0-59/10 13 * * *'   # De 14:00 até 14:30 (de 10 em 10 minutos)
    - cron: '0-59/10 19 * * *'  # De 19:00 até 19:59 (de 10 em 10 minutos)
    - cron: '0-30/10 20 * * *'   # De 20:00 até 20:30 (de 10 em 10 minutos)
  workflow_dispatch:  # Permite execução manual

jobs:
  run-script:
    runs-on: ubuntu-latest
    env:
      RENV_PATHS_CACHE: ~/.local/share/renv/cache  # Define o caminho do cache do renv
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup R environment
        uses: r-lib/actions/setup-r@v2

      - name: Create renv directory if it doesn't exist
        run: mkdir -p renv/library

      - name: Setup cache for R packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.local/share/renv/cache
            renv/library
          key: renv-cache-${{ runner.os }}-${{ hashFiles('renv.lock') }}
          restore-keys: |
            renv-cache-${{ runner.os }}-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libgit2-dev libx11-dev

      - name: Install renv, restore
        run: |
          Rscript -e 'install.packages("renv", repos="https://cran.rstudio.com/")'
          Rscript -e 'renv::activate(); renv::restore(prompt = FALSE)'

      - name: Debug R Libraries (Antes da ativação do renv)
        run: |
          echo "### Caminhos de bibliotecas antes do renv:"
          Rscript -e 'print(.libPaths())'
          echo "### Pacotes instalados antes do renv:"
          Rscript -e 'print(installed.packages()[,1])'

      - name: Debug R Libraries (Depois da ativação do renv)
        run: |
          echo "### Caminhos de bibliotecas após ativação do renv:"
          Rscript -e 'print(.libPaths())'
          echo "### Pacotes instalados após ativação do renv:"
          Rscript -e 'print(installed.packages()[,1])'
          echo "### Status do renv:"
          Rscript -e 'renv::status()'

      # Passo 3: Instalar o Java
      - name: Install Java
        run: sudo apt-get install -y default-jre

      # Passo 4: Baixar o Selenium Server
      - name: Download Selenium Server
        run: |
          wget https://selenium-release.storage.googleapis.com/4.10/selenium-server-4.10.0.jar
          mv selenium-server-4.10.0.jar selenium-server.jar

      - name: Download Selenium Server
        run: |
          wget https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.16.0/selenium-server-4.16.0.jar
          mv selenium-server-4.16.0.jar selenium-server.jar

      - name: Start Selenium Server
        run: |
          java -jar selenium-server.jar standalone --port 4444 &
          sleep 10  # Aguarda o servidor iniciar

      # Passo 6: Instalar o RSelenium
#      - name: Install RSelenium
#        run: |
#          install.packages("RSelenium")
#          renv::install("RSelenium")

      # Passo 7: Executar o script R
      - name: Run R script
        run: Rscript seu_script.R
          

      - name: Run R script
        run: |
          Rscript -e '
            renv::activate();
            print(.libPaths());
            library(httr);
            print(installed.packages()[,1]);
            print(Sys.getenv("RENV_PATHS_ROOT"));
            source("gs/rscript_teste.R")
          '

      - name: Check if CSV file exists
        run: |
          if [ ! -f "gs/SimuladorEletricidade_OF_MN_2025_2.csv" ]; then
            echo "::error::CSV file does not exist. Skipping commit."
            exit 1
          fi
          echo "CSV file exists. Proceeding to commit."

      - name: Commit new file
        uses: EndBug/add-and-commit@v9
        with:
          add: "gs/SimuladorEletricidade_OF_MN_2025_3.csv"
          message: "Adiciona novo arquivo gerado pelo workflow"
          github_token: ${{ secrets.PAT_TOKEN }}
